# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
resources:
  containers:
  - container: azurite
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
    - 10000:10000
    - 10001:10001

trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*

pool:
  vmImage: 'windows-latest'

services:
  nginx: azurite

variables:
  buildConfiguration: 'Release'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $gitVersion = (git describe | Select-String  -Pattern '(?<=^v)\d+.\d+.\d+(-[A-Za-z0-9]+(\.[A-Za-z0-9]+)*)?$' | % { $_.Matches } | % { $_.Value })
      if ($null -ne $gitVersion)
      {
        echo "##vso[task.setvariable variable=theGitVersion]$gitVersion"
      } else 
      {
        Write-Error 'Illegal tag format'
        exit 1
      }
    pwsh: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      echo 'gitVersion: $(theGitVersion)'
    pwsh: true

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'echo ''The value is $BLABLA'' | BLABLA=1337 envsubst | cat'
    noProfile: false
    noRc: false

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'echo $env:ChocolateyInstall'
    pwsh: true
  
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      'New-Item $env:ChocolateyInstall\templates -ItemType Directory -Force'
      'Write-Host "blablabla" > $env:ChocolateyInstall\templates\mytemplate'
    pwsh: true

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: 'Com.Github.Zycrophat.Serilog.Extensions/*.csproj'
    nobuild: true
    versioningScheme: 'off'

- task: CopyFiles@2
  inputs:
    SourceFolder: '.'
    Contents: '*.nupkg'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    FlattenFolders: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Com.Github.Zycrophat.Serilog.Extensions'
    publishLocation: 'Container'

